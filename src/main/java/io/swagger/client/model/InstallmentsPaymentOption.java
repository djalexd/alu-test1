/**
 * Gecad ePayment API
 * Move your app forward with the Uber API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Pay with installments
 */
@ApiModel(description = "Pay with installments")

public class InstallmentsPaymentOption   {
  @SerializedName("numberOfInstallments")
  private Integer numberOfInstallments = null;

  @SerializedName("cardProgramName")
  private String cardProgramName = null;

  /**
   * A predefined string value indicating the type of campaign to be used. It can only have  one of the following values: * EXTRA_INSTALLMENTS * DELAY_INSTALLMENTS  For bank terminals supporting both campaign types used at the same time, you can set  both comma separated values, e.g: EXTRA_INSTALLMENTS,DELAY_INSTALLMENTS.     Must be used only with installments transactions (SELECTED_INSTALLMENTS_NUMBER >= 2). 
   */
  public enum CampaignTypeEnum {
    @SerializedName("EXTRA_INSTALLMENTS")
    EXTRA_INSTALLMENTS("EXTRA_INSTALLMENTS"),
    
    @SerializedName("DELAY_INSTALLMENTS")
    DELAY_INSTALLMENTS("DELAY_INSTALLMENTS");

    private String value;

    CampaignTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("campaignType")
  private CampaignTypeEnum campaignType = null;

  public InstallmentsPaymentOption numberOfInstallments(Integer numberOfInstallments) {
    this.numberOfInstallments = numberOfInstallments;
    return this;
  }

   /**
   * The number of installments. It can be an integer between 1 and 12 
   * minimum: 1.0
   * maximum: 12.0
   * @return numberOfInstallments
  **/
  @ApiModelProperty(example = "null", value = "The number of installments. It can be an integer between 1 and 12 ")
  public Integer getNumberOfInstallments() {
    return numberOfInstallments;
  }

  public void setNumberOfInstallments(Integer numberOfInstallments) {
    this.numberOfInstallments = numberOfInstallments;
  }

  public InstallmentsPaymentOption cardProgramName(String cardProgramName) {
    this.cardProgramName = cardProgramName;
    return this;
  }

   /**
   * The name of card program that allows paying an order using installments 
   * @return cardProgramName
  **/
  @ApiModelProperty(example = "null", value = "The name of card program that allows paying an order using installments ")
  public String getCardProgramName() {
    return cardProgramName;
  }

  public void setCardProgramName(String cardProgramName) {
    this.cardProgramName = cardProgramName;
  }

  public InstallmentsPaymentOption campaignType(CampaignTypeEnum campaignType) {
    this.campaignType = campaignType;
    return this;
  }

   /**
   * A predefined string value indicating the type of campaign to be used. It can only have  one of the following values: * EXTRA_INSTALLMENTS * DELAY_INSTALLMENTS  For bank terminals supporting both campaign types used at the same time, you can set  both comma separated values, e.g: EXTRA_INSTALLMENTS,DELAY_INSTALLMENTS.     Must be used only with installments transactions (SELECTED_INSTALLMENTS_NUMBER >= 2). 
   * @return campaignType
  **/
  @ApiModelProperty(example = "null", value = "A predefined string value indicating the type of campaign to be used. It can only have  one of the following values: * EXTRA_INSTALLMENTS * DELAY_INSTALLMENTS  For bank terminals supporting both campaign types used at the same time, you can set  both comma separated values, e.g: EXTRA_INSTALLMENTS,DELAY_INSTALLMENTS.     Must be used only with installments transactions (SELECTED_INSTALLMENTS_NUMBER >= 2). ")
  public CampaignTypeEnum getCampaignType() {
    return campaignType;
  }

  public void setCampaignType(CampaignTypeEnum campaignType) {
    this.campaignType = campaignType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstallmentsPaymentOption installmentsPaymentOption = (InstallmentsPaymentOption) o;
    return Objects.equals(this.numberOfInstallments, installmentsPaymentOption.numberOfInstallments) &&
        Objects.equals(this.cardProgramName, installmentsPaymentOption.cardProgramName) &&
        Objects.equals(this.campaignType, installmentsPaymentOption.campaignType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numberOfInstallments, cardProgramName, campaignType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstallmentsPaymentOption {\n");
    
    sb.append("    numberOfInstallments: ").append(toIndentedString(numberOfInstallments)).append("\n");
    sb.append("    cardProgramName: ").append(toIndentedString(cardProgramName)).append("\n");
    sb.append("    campaignType: ").append(toIndentedString(campaignType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

