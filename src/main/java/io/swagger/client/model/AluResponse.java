/**
 * Gecad ePayment API
 * Move your app forward with the Uber API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.WireAccount;
import java.util.ArrayList;
import java.util.List;


/**
 * 2.0 model version for ALU entities
 */
@ApiModel(description = "2.0 model version for ALU entities")

public class AluResponse   {
  @SerializedName("refNum")
  private String refNum = null;

  /**
   * Possible values * SUCCESS - If the payment was authorized. In this case also REFNO is returned (see response sample) * FAILED - If the payment could NOT be authorized for various reasons (fraud, insufficient funds etc.). In this case a REFNO is returned, but the payment is Pending (see response sample) * INPUT_ERROR - If the payment request has erroneous or missing required parameters (see response sample) 
   */
  public enum StatusEnum {
    @SerializedName("SUCCESS")
    SUCCESS("SUCCESS"),
    
    @SerializedName("FAILED")
    FAILED("FAILED"),
    
    @SerializedName("INPUT_ERROR")
    INPUT_ERROR("INPUT_ERROR");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  /**
   * Gets or Sets returnCode
   */
  public enum ReturnCodeEnum {
    @SerializedName("AUTHORIZED")
    AUTHORIZED("AUTHORIZED"),
    
    @SerializedName("3DS_ENROLLED")
    _3DS_ENROLLED("3DS_ENROLLED"),
    
    @SerializedName("ALREADY_AUTHORIZED")
    ALREADY_AUTHORIZED("ALREADY_AUTHORIZED"),
    
    @SerializedName("AUTHORIZATION_FAILED")
    AUTHORIZATION_FAILED("AUTHORIZATION_FAILED"),
    
    @SerializedName("INVALID_CUSTOMER_INFO")
    INVALID_CUSTOMER_INFO("INVALID_CUSTOMER_INFO"),
    
    @SerializedName("INVALID_PAYMENT_INFO")
    INVALID_PAYMENT_INFO("INVALID_PAYMENT_INFO"),
    
    @SerializedName("INVALID_ACCOUNT")
    INVALID_ACCOUNT("INVALID_ACCOUNT"),
    
    @SerializedName("INVALID_PAYMENT_METHOD_CODE")
    INVALID_PAYMENT_METHOD_CODE("INVALID_PAYMENT_METHOD_CODE"),
    
    @SerializedName("INVALID_CURRENCY")
    INVALID_CURRENCY("INVALID_CURRENCY"),
    
    @SerializedName("REQUEST_EXPIRED")
    REQUEST_EXPIRED("REQUEST_EXPIRED"),
    
    @SerializedName("HASH_MISMATCH")
    HASH_MISMATCH("HASH_MISMATCH"),
    
    @SerializedName("WRONG_VERSION")
    WRONG_VERSION("WRONG_VERSION"),
    
    @SerializedName("INVALID_CC_TOKEN")
    INVALID_CC_TOKEN("INVALID_CC_TOKEN"),
    
    @SerializedName("INSTALLMENTS_LOYALTY_POINTS_INCOMPATIBLE")
    INSTALLMENTS_LOYALTY_POINTS_INCOMPATIBLE("INSTALLMENTS_LOYALTY_POINTS_INCOMPATIBLE");

    private String value;

    ReturnCodeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("returnCode")
  private ReturnCodeEnum returnCode = null;

  @SerializedName("continueUri3Ds")
  private String continueUri3Ds = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("installmentsNum")
  private String installmentsNum = null;

  @SerializedName("cardProgramName")
  private String cardProgramName = null;

  @SerializedName("orderRef")
  private String orderRef = null;

  @SerializedName("wireAccounts")
  private List<WireAccount> wireAccounts = new ArrayList<WireAccount>();

  @SerializedName("tokenHash")
  private String tokenHash = null;

  @SerializedName("txnRefNo")
  private String txnRefNo = null;

  @SerializedName("completeTxnRedirectUri")
  private String completeTxnRedirectUri = null;

  public AluResponse refNum(String refNum) {
    this.refNum = refNum;
    return this;
  }

   /**
   * Global PayU reference number for the order.  This is unique across all requests. If any of the required parameters  is missing, this will be empty! 
   * @return refNum
  **/
  @ApiModelProperty(example = "null", value = "Global PayU reference number for the order.  This is unique across all requests. If any of the required parameters  is missing, this will be empty! ")
  public String getRefNum() {
    return refNum;
  }

  public void setRefNum(String refNum) {
    this.refNum = refNum;
  }

  public AluResponse status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Possible values * SUCCESS - If the payment was authorized. In this case also REFNO is returned (see response sample) * FAILED - If the payment could NOT be authorized for various reasons (fraud, insufficient funds etc.). In this case a REFNO is returned, but the payment is Pending (see response sample) * INPUT_ERROR - If the payment request has erroneous or missing required parameters (see response sample) 
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "Possible values * SUCCESS - If the payment was authorized. In this case also REFNO is returned (see response sample) * FAILED - If the payment could NOT be authorized for various reasons (fraud, insufficient funds etc.). In this case a REFNO is returned, but the payment is Pending (see response sample) * INPUT_ERROR - If the payment request has erroneous or missing required parameters (see response sample) ")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public AluResponse returnCode(ReturnCodeEnum returnCode) {
    this.returnCode = returnCode;
    return this;
  }

   /**
   * Get returnCode
   * @return returnCode
  **/
  @ApiModelProperty(example = "null", value = "")
  public ReturnCodeEnum getReturnCode() {
    return returnCode;
  }

  public void setReturnCode(ReturnCodeEnum returnCode) {
    this.returnCode = returnCode;
  }

  public AluResponse continueUri3Ds(String continueUri3Ds) {
    this.continueUri3Ds = continueUri3Ds;
    return this;
  }

   /**
   * In case that the credit card is enrolled in 3D Secure system,  this parameter will contain an URL where the Merchant  should redirect the browser of the Shopper (see response sample). 
   * @return continueUri3Ds
  **/
  @ApiModelProperty(example = "null", value = "In case that the credit card is enrolled in 3D Secure system,  this parameter will contain an URL where the Merchant  should redirect the browser of the Shopper (see response sample). ")
  public String getContinueUri3Ds() {
    return continueUri3Ds;
  }

  public void setContinueUri3Ds(String continueUri3Ds) {
    this.continueUri3Ds = continueUri3Ds;
  }

  public AluResponse amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Total transacted amount
   * @return amount
  **/
  @ApiModelProperty(example = "null", value = "Total transacted amount")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public AluResponse currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * The currency in which the order has been processed
   * @return currency
  **/
  @ApiModelProperty(example = "null", value = "The currency in which the order has been processed")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public AluResponse installmentsNum(String installmentsNum) {
    this.installmentsNum = installmentsNum;
    return this;
  }

   /**
   * The number of installments
   * @return installmentsNum
  **/
  @ApiModelProperty(example = "null", value = "The number of installments")
  public String getInstallmentsNum() {
    return installmentsNum;
  }

  public void setInstallmentsNum(String installmentsNum) {
    this.installmentsNum = installmentsNum;
  }

  public AluResponse cardProgramName(String cardProgramName) {
    this.cardProgramName = cardProgramName;
    return this;
  }

   /**
   * The name of card program used for paying the order
   * @return cardProgramName
  **/
  @ApiModelProperty(example = "null", value = "The name of card program used for paying the order")
  public String getCardProgramName() {
    return cardProgramName;
  }

  public void setCardProgramName(String cardProgramName) {
    this.cardProgramName = cardProgramName;
  }

  public AluResponse orderRef(String orderRef) {
    this.orderRef = orderRef;
    return this;
  }

   /**
   * Order external reference number in Merchant's system
   * @return orderRef
  **/
  @ApiModelProperty(example = "null", value = "Order external reference number in Merchant's system")
  public String getOrderRef() {
    return orderRef;
  }

  public void setOrderRef(String orderRef) {
    this.orderRef = orderRef;
  }

  public AluResponse wireAccounts(List<WireAccount> wireAccounts) {
    this.wireAccounts = wireAccounts;
    return this;
  }

  public AluResponse addWireAccountsItem(WireAccount wireAccountsItem) {
    this.wireAccounts.add(wireAccountsItem);
    return this;
  }

   /**
   * Contains an array of bank accounts used for paying in WIRE method. In case of other payment methods the node will be missing. 
   * @return wireAccounts
  **/
  @ApiModelProperty(example = "null", value = "Contains an array of bank accounts used for paying in WIRE method. In case of other payment methods the node will be missing. ")
  public List<WireAccount> getWireAccounts() {
    return wireAccounts;
  }

  public void setWireAccounts(List<WireAccount> wireAccounts) {
    this.wireAccounts = wireAccounts;
  }

  public AluResponse tokenHash(String tokenHash) {
    this.tokenHash = tokenHash;
    return this;
  }

   /**
   * Displayed only if token payments are enabled for this order.   See **Enable Token Payments**  Represents the hash string for the generated token. It can be used by specifying this hash string in the CC_TOKEN field  for OneClick payments. 
   * @return tokenHash
  **/
  @ApiModelProperty(example = "null", value = "Displayed only if token payments are enabled for this order.   See **Enable Token Payments**  Represents the hash string for the generated token. It can be used by specifying this hash string in the CC_TOKEN field  for OneClick payments. ")
  public String getTokenHash() {
    return tokenHash;
  }

  public void setTokenHash(String tokenHash) {
    this.tokenHash = tokenHash;
  }

  public AluResponse txnRefNo(String txnRefNo) {
    this.txnRefNo = txnRefNo;
    return this;
  }

   /**
   * *[Offline payment methods only]* The acquirer reference number for  the generated transaction. If any error occurs during transaction or the  transfer is rejected, this response element will be empty or missing. 
   * @return txnRefNo
  **/
  @ApiModelProperty(example = "null", value = "*[Offline payment methods only]* The acquirer reference number for  the generated transaction. If any error occurs during transaction or the  transfer is rejected, this response element will be empty or missing. ")
  public String getTxnRefNo() {
    return txnRefNo;
  }

  public void setTxnRefNo(String txnRefNo) {
    this.txnRefNo = txnRefNo;
  }

  public AluResponse completeTxnRedirectUri(String completeTxnRedirectUri) {
    this.completeTxnRedirectUri = completeTxnRedirectUri;
    return this;
  }

   /**
   * [PBL payment methods only] The url to which the merchant  must redirect the user in order to complete the transaction. 
   * @return completeTxnRedirectUri
  **/
  @ApiModelProperty(example = "null", value = "[PBL payment methods only] The url to which the merchant  must redirect the user in order to complete the transaction. ")
  public String getCompleteTxnRedirectUri() {
    return completeTxnRedirectUri;
  }

  public void setCompleteTxnRedirectUri(String completeTxnRedirectUri) {
    this.completeTxnRedirectUri = completeTxnRedirectUri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AluResponse aluResponse = (AluResponse) o;
    return Objects.equals(this.refNum, aluResponse.refNum) &&
        Objects.equals(this.status, aluResponse.status) &&
        Objects.equals(this.returnCode, aluResponse.returnCode) &&
        Objects.equals(this.continueUri3Ds, aluResponse.continueUri3Ds) &&
        Objects.equals(this.amount, aluResponse.amount) &&
        Objects.equals(this.currency, aluResponse.currency) &&
        Objects.equals(this.installmentsNum, aluResponse.installmentsNum) &&
        Objects.equals(this.cardProgramName, aluResponse.cardProgramName) &&
        Objects.equals(this.orderRef, aluResponse.orderRef) &&
        Objects.equals(this.wireAccounts, aluResponse.wireAccounts) &&
        Objects.equals(this.tokenHash, aluResponse.tokenHash) &&
        Objects.equals(this.txnRefNo, aluResponse.txnRefNo) &&
        Objects.equals(this.completeTxnRedirectUri, aluResponse.completeTxnRedirectUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(refNum, status, returnCode, continueUri3Ds, amount, currency, installmentsNum, cardProgramName, orderRef, wireAccounts, tokenHash, txnRefNo, completeTxnRedirectUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AluResponse {\n");
    
    sb.append("    refNum: ").append(toIndentedString(refNum)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    returnCode: ").append(toIndentedString(returnCode)).append("\n");
    sb.append("    continueUri3Ds: ").append(toIndentedString(continueUri3Ds)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    installmentsNum: ").append(toIndentedString(installmentsNum)).append("\n");
    sb.append("    cardProgramName: ").append(toIndentedString(cardProgramName)).append("\n");
    sb.append("    orderRef: ").append(toIndentedString(orderRef)).append("\n");
    sb.append("    wireAccounts: ").append(toIndentedString(wireAccounts)).append("\n");
    sb.append("    tokenHash: ").append(toIndentedString(tokenHash)).append("\n");
    sb.append("    txnRefNo: ").append(toIndentedString(txnRefNo)).append("\n");
    sb.append("    completeTxnRedirectUri: ").append(toIndentedString(completeTxnRedirectUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

